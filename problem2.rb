# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

class Fibbonacci
  attr_reader :terminus

  SEQUENCE = [0,1]

  def initialize(terminus)
    @terminus = terminus
    populate_sequence
  end

  def populate_sequence
  combined = SEQUENCE[-2] + SEQUENCE[-1]
    while combined <= terminus
      SEQUENCE << combined
      combined = SEQUENCE[-2] + SEQUENCE[-1]
    end
  end

  def add_even_terms
    index = 0
    total = 0
    while index < SEQUENCE.length
      total += SEQUENCE[index]
      index += 3
    end
    total
  end

end


fib = Fibbonacci.new(4000000)
puts Fibbonacci::SEQUENCE
puts "All the even terms add up to be #{fib.add_even_terms}"